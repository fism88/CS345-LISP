(let-rec ((f (lambda (x) x))) (f 3))
(if (= 1 2) 1 2)
(if (= 1 1) 1 2)
(if (= (+ 1 3) (+ 2 2)) (let ((f (lambda (x) x))) (f 1)) 2)
(let-rec ((f (lambda (n) (if (= n 10) 1 (f (+ n 1)))))) (f 3))
(let-rec ((f (lambda (n) (if (= n 10) 1 (+ 1 (f (+ n 1))))))) (f 3))
(let-rec ())
